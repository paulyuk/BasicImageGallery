{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "coreimagegalleryappinsightsName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "coreimagegalleryappinsights"
    },
    "coreimagegalleryplanName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "coreimagegalleryplan"
    },
    "coreimagegallerywebappName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "coreimagegallerywebapp"
    },
    "coreimagegalleryfunctionsappName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "coreimagegalleryfunctionsapp"
    },
    "coreimagegalleryplanSkuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "linuxFxVersion" : {
        "type": "string",
        "defaultValue" : "DOTNETCORE|3.0",
        "metadata": {
          "description": "The Runtime stack of current web app"
        }
    },
    "linuxFxVersionFunctions" : {
        "type": "string",
        "defaultValue" : "DOCKER|mcr.microsoft.com/azure-functions/dotnet:2.0-appservice",
        "metadata": {
          "description": "The Runtime stack of current web app"
        }
    },
    "netFrameworkVersion" : {
        "type": "string",
        "defaultValue" : "v4.0"
    },
    "coreimagegallerysqlserverAdminLoginUsername" : {
      "type": "string",
      "minLength": 1,
      "defaultValue": "dbadmin"
    },
    "coreimagegallerysqlserverAdminLoginPassword": {
      "type": "securestring"
    },
    "coreimagegallerysqlserverName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "coreimagegallerysqlserver"
    },
    "coreimagegallerysqldbName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "coreimagegallerysqldb"
    },
    "coreimagegallerysqldbCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "useuniquenamesuffixes": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ]
    },
    "coreimagegallerysqldbEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "coreimagegallerysqldbRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "coreimagegallerystorageName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "storage"
    },
    "coreimagegallerystorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "cosmosdb-accountName": {
			"type": "string",
			"defaultValue": "[concat('sql-', uniqueString(resourceGroup().id))]",
			"metadata": {
				"description": "Cosmos DB account name, max length 44 characters"
			}
		},
		"cosmosdb-primaryRegion":{
			"type":"string",
			"metadata": {
				"description": "The primary replica region for the Cosmos DB account."
			},
      "defaultValue" : "[resourceGroup().location]"
		},
		"cosmosdb-secondaryRegion":{
			"type":"string",
			"metadata": {
			  "description": "The secondary replica region for the Cosmos DB account."
		  }
		},
		"cosmosdb-defaultConsistencyLevel": {
			"type": "string",
			"defaultValue": "Session",
			"allowedValues": [ "Eventual", "ConsistentPrefix", "Session", "BoundedStaleness", "Strong" ],
			"metadata": {
				"description": "The default consistency level of the Cosmos DB account."
			}
		},
		"cosmosdb-maxStalenessPrefix": {
			"type": "int",
			"minValue": 10,
			"defaultValue": 100000,
			"maxValue": 2147483647,
			"metadata": {
				"description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
			}
		},
		"cosmosdb-maxIntervalInSeconds": {
			"type": "int",
			"minValue": 5,
			"defaultValue": 300,
			"maxValue": 86400,
			"metadata": {
				"description": "Max lag time (minutes). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
			}
		},	
		"cosmosdb-multipleWriteLocations": {
			"type": "bool",
			"defaultValue": false,
			"allowedValues": [ true, false ],
			"metadata": {
				"description": "Enable multi-master to make all regions writable."
			}
		},
		"cosmosdb-automaticFailover": {
			"type": "bool",
			"defaultValue": false,
			"allowedValues": [ true, false ],
			"metadata": {
				"description": "Enable automatic failover for regions. Ignored when Multi-Master is enabled"
			}
		},
		"cosmosdb-databaseName": {
			"type": "string",
			"metadata": {
				"description": "The name for the SQL database"
			}
		},
		"cosmosdb-sharedThroughput": {
			"type": "int",
			"defaultValue": 400,
			"minValue": 400,
			"maxValue": 1000000,
			"metadata": {
				"description": "The throughput for the database to be shared"
			}			
		},
		"cosmosdb-sharedContainer1Name": {
			"type": "string",
			"defaultValue": "sharedContainer1",
			"metadata": {
				"description": "The name for the first container with shared throughput"
			}
		},
		"cosmosdb-sharedContainer2Name": {
			"type": "string",
			"defaultValue": "sharedContainer2",
			"metadata": {
				"description": "The name for the second container with shared throughput"
			}
		},
		"cosmosdb-dedicatedContainer1Name": {
			"type": "string",
			"defaultValue": "dedicatedContainer1",
			"metadata": {
				"description": "The name for the container with dedicated throughput"
			}
		},
		"cosmosdb-dedicatedThroughput": {
			"type": "int",
			"defaultValue": 400,
			"minValue": 400,
			"maxValue": 1000000,
			"metadata": {
				"description": "The throughput for the container with dedicated throughput"
			}			
    }
  },
  "variables": {
    "coreimagegallerywebappName": "[if(equals(parameters('useuniquenamesuffixes'),'Enabled'), concat(parameters('coreimagegallerywebappName'),'-', uniqueString(resourceGroup().id)), parameters('coreimagegallerywebappName'))]",
    "coreimagegalleryfunctionsappName": "[if(equals(parameters('useuniquenamesuffixes'),'Enabled'), concat(parameters('coreimagegalleryfunctionsappName'),'-', uniqueString(resourceGroup().id)), parameters('coreimagegalleryfunctionsappName'))]",
    "coreimagegallerysqlserverName": "[if(equals(parameters('useuniquenamesuffixes'),'Enabled'), concat(parameters('coreimagegallerysqlserverName'),'-', uniqueString(resourceGroup().id)), parameters('coreimagegallerysqlserverName'))]",
    "coreimagegallerystorageName": "[if(equals(parameters('useuniquenamesuffixes'),'Enabled'), concat(parameters('coreimagegallerystorageName'),uniqueString(resourceGroup().id)), parameters('coreimagegallerystorageName'))]",
    "coreimagegallerycosmosdbName": "[if(equals(parameters('useuniquenamesuffixes'),'Enabled'), concat(parameters('cosmosdb-databaseName'),uniqueString(resourceGroup().id)), parameters('cosmosdb-databaseName'))]",	
    "accountName": "[toLower(parameters('cosmosdb-accountName'))]",
		"consistencyPolicy": {
			"Eventual": {
				"defaultConsistencyLevel": "Eventual"
			},
			"ConsistentPrefix": {
				"defaultConsistencyLevel": "ConsistentPrefix"
			},
			"Session": {
				"defaultConsistencyLevel": "Session"
			},
			"BoundedStaleness": {
				"defaultConsistencyLevel": "BoundedStaleness",
				"maxStalenessPrefix": "[parameters('cosmosdb-maxStalenessPrefix')]",
				"maxIntervalInSeconds": "[parameters('cosmosdb-maxIntervalInSeconds')]"
			},
			"Strong": {
				"defaultConsistencyLevel": "Strong"
			}
		},
		"locations": 
		[ 
			{
				"locationName": "[parameters('cosmosdb-primaryRegion')]",
				"failoverPriority": 0,
				"isZoneRedundant": false
			}, 
			{
				"locationName": "[parameters('cosmosdb-secondaryRegion')]",
				"failoverPriority": 1,
				"isZoneRedundant": false
			}
		]
  },
  "resources": [
    {
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"name": "[variables('accountName')]",
			"apiVersion": "2019-08-01",
			"kind": "GlobalDocumentDB",
			"location": "[resourceGroup().location]",
      "tags": {
        "displayName": "coreimagegallery-cosmosdb-account",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]": "Resource"
      },
			"properties": {
				"consistencyPolicy": "[variables('consistencyPolicy')[parameters('cosmosdb-defaultConsistencyLevel')]]",
				"locations": "[variables('locations')]",
				"databaseAccountOfferType": "Standard",
				"enableAutomaticFailover": "[parameters('cosmosdb-automaticFailover')]",
				"enableMultipleWriteLocations": "[parameters('cosmosdb-multipleWriteLocations')]"
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
			"name": "[concat(variables('accountName'), '/', variables('coreimagegallerycosmosdbName'))]",
			"apiVersion": "2019-08-01",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]" ],
      "tags": {
        "displayName": "coreimagegallery-cosmosdb-sqldatabase",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.DocumentDB/sqlDatabases', variables('accountName'), '/', variables('coreimagegallerycosmosdbName'))]": "Resource"
      },
			"properties":{
				"resource":{
					"id": "[variables('coreimagegallerycosmosdbName')]"
				},
				"options": { "throughput": "[parameters('cosmosdb-sharedThroughput')]" }
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
			"name": "[concat(variables('accountName'), '/', variables('coreimagegallerycosmosdbName'), '/', parameters('cosmosdb-sharedContainer1Name'))]",
			"apiVersion": "2019-08-01",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('accountName'), variables('coreimagegallerycosmosdbName'))]" ],
			"tags": {
        "displayName": "coreimagegallery-cosmosdb-container1",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.DocumentDB/sqlDatabases/containers', variables('accountName'), '/', variables('coreimagegallerycosmosdbName'), '/', parameters('cosmosdb-sharedContainer1Name'))]": "Resource"
      },
      "properties":
			{
				"resource":{
					"id":  "[parameters('cosmosdb-sharedContainer1Name')]",
					"partitionKey": {
						"paths": [
						"/myPartitionKey"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*"
							}
						],
						"excludedPaths": [{
								"path": "/myPathToNotIndex/*"
							}
						]
					}
				}
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
			"name": "[concat(variables('accountName'), '/', variables('coreimagegallerycosmosdbName'), '/', parameters('cosmosdb-sharedContainer2Name'))]",
			"apiVersion": "2019-08-01",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('accountName'), variables('coreimagegallerycosmosdbName'))]" ],
			"tags": {
        "displayName": "coreimagegallery-cosmosdb-container2",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.DocumentDB/sqlDatabases/containers', variables('accountName'), '/', variables('coreimagegallerycosmosdbName'), '/', parameters('cosmosdb-sharedContainer2Name'))]": "Resource"
      },
      "properties":
			{
				"resource":{
					"id":  "[parameters('cosmosdb-sharedContainer2Name')]",
					"partitionKey": {
						"paths": [
						"/myPartitionKey"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*"
							}
						],
						"excludedPaths": [{
								"path": "/myPathToNotIndex/*"
							}
						]
					}
				}
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
			"name": "[concat(variables('accountName'), '/', variables('coreimagegallerycosmosdbName'), '/', parameters('cosmosdb-dedicatedContainer1Name'))]",
			"apiVersion": "2019-08-01",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('accountName'), variables('coreimagegallerycosmosdbName'))]" ],
      "tags": {
        "displayName": "coreimagegallery-cosmosdb-dedicatedcontainer1",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.DocumentDB/sqlDatabases/containers', variables('accountName'), '/', variables('coreimagegallerycosmosdbName'), '/', parameters('cosmosdb-dedicatedContainer1Name'))]": "Resource"
      },
			"properties":
			{
				"resource":{
					"id":  "[parameters('cosmosdb-dedicatedContainer1Name')]",
					"partitionKey": {
						"paths": [
						"/myPartitionKey"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*"
							}
						],
						"excludedPaths": [{
								"path": "/myPathToNotIndex/*"
							}
						],
						"compositeIndexes":[  
						[
							{
								"path":"/name",
								"order":"ascending"
							},
							{
								"path":"/age",
								"order":"descending"
							}
						]
					],
					"spatialIndexes": [
							{
								"path": "/path/to/geojson/property/?",
								"types": [
									"Point",
									"Polygon",
									"MultiPolygon",
									"LineString"
								]
							}
						]
					},
					"defaultTtl": 86400,
					"uniqueKeyPolicy": {
						"uniqueKeys": [
						{
							"paths": [
							"/phoneNumber"
							]
						}
						]
					}
				},
				"options": { "throughput": "[parameters('cosmosdb-dedicatedThroughput')]" }
			}
		},
    {
      "name": "[parameters('coreimagegalleryappinsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
      ],
      "tags": {
        "displayName": "coreimagegalleryappinsights",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('coreimagegallerywebappName'))]": "Resource"
      },
      "properties": {
        "applicationId": "[parameters('coreimagegalleryappinsightsName')]"
      }
    },
    {
      "name": "[variables('coreimagegallerysqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "coreimagegallerysqlserver"
      },
      "properties": {
        "administratorLogin": "[parameters('coreimagegallerysqlserverAdminLoginUsername')]",
        "administratorLoginPassword": "[parameters('coreimagegallerysqlserverAdminLoginPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('coreimagegallerysqlserverName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[parameters('coreimagegallerysqldbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('coreimagegallerysqlserverName'))]"
          ],
          "tags": {
            "displayName": "coreimagegallerysqldb"
          },
          "properties": {
            "collation": "[parameters('coreimagegallerysqldbCollation')]",
            "edition": "[parameters('coreimagegallerysqldbEdition')]",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('coreimagegallerysqldbRequestedServiceObjectiveName')]"
          }
        }
      ]
    },
    {
      "name": "[variables('coreimagegallerystorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('coreimagegallerystorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "coreimagegallerystorage"
      },
      "kind": "Storage"
    },
    {
      "name": "[parameters('coreimagegalleryplanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-02-01",
      "sku": {
        "name": "[parameters('coreimagegalleryplanSkuName')]"
      },
      "kind": "linux",
      "dependsOn": [],
      "tags": {
        "displayName": "coreimagegalleryplan"
      },
      "properties": {
        "reserved":true
      }
    },
    {
      "name": "[variables('coreimagegallerywebappName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-11-01",
      "kind": "app,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('coreimagegalleryplanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('coreimagegalleryplanName')))]": "Resource",
        "displayName": "coreimagegallerywebapp"
      },
      "properties": {
        "name": "[variables('coreimagegallerywebappName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('coreimagegalleryplanName'))]",
        "siteConfig": {
            "linuxFxVersion": "[parameters('linuxFxVersion')]",
            "netFrameworkVersion": "[parameters('netFrameworkVersion')]"
          }
      },
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('coreimagegallerywebappName'))]",
          ],
          "tags": {
            "displayName": "appsettings"
          },
          "properties": {
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', parameters('coreimagegalleryappinsightsName'))).InstrumentationKey]",
            "AzureStorageConnection": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('coreimagegallerystorageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('coreimagegallerystorageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
            "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
            "XDT_MicrosoftApplicationInsights_Mode": "recommended",
            "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
            "DiagnosticServices_EXTENSION_VERSION": "~3",
            "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
            "SnapshotDebugger_EXTENSION_VERSION": "~1",
            "InstrumentationEngine_EXTENSION_VERSION": "~1",
            "XDT_MicrosoftApplicationInsights_BaseExtensions": "disabled"
          }
        },
        {
          "name": "connectionstrings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('coreimagegallerywebappName'))]",
            "[resourceId('Microsoft.Sql/servers/databases', variables('coreimagegallerysqlserverName'), parameters('coreimagegallerysqldbName'))]"
          ],
          "tags": {
            "hidden-related:/subscriptions/ca5ce512-88e1-44b1-97c6-22caf84fb2b0/resourceGroups/coreimagegallery-connect2018/providers/Microsoft.Web/serverfarms/CoreImageGalleryPlan": "empty"
          },
          "properties": {
            "DefaultConnection": {
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('coreimagegallerysqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('coreimagegallerysqldbName'), ';User Id=', parameters('coreimagegallerysqlserverAdminLoginUsername'), '@', variables('coreimagegallerysqlserverName'), ';Password=', parameters('coreimagegallerysqlserverAdminLoginPassword'), ';')]",
              "type": "SQLAzure"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2016-08-01",
      "name": "[variables('coreimagegalleryfunctionsappName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux,container",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('coreimagegalleryplanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('coreimagegallerystorageName'))]"
      ],
      "tags": {
        "displayName": "coreimagegalleryfunctionsapp"
      },
      "properties": {
        "name": "[variables('coreimagegalleryfunctionsappName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('coreimagegalleryplanName'))]",
        "clientAffinityEnabled": false,
        "hostingEnvironment": "",
        "siteConfig": {
          "alwaysOn": true,
          "linuxFxVersion": "[parameters('linuxFxVersionFunctions')]",
          "netFrameworkVersion": "[parameters('netFrameworkVersion')]",
          "appSettings": [
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('coreimagegallerystorageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('coreimagegallerystorageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('coreimagegallerystorageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('coreimagegallerystorageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[concat(toLower(variables('coreimagegalleryfunctionsappName')), 'b2b4')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('microsoft.insights/components/', parameters('coreimagegalleryappinsightsName'))).InstrumentationKey]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {}
  }